# Default values for oidc-webhook-authenticator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: eu.gcr.io/gardener-project/gardener/oidc-webhook-authenticator
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 443

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Name of the secret containing the certificates for the oidc-webhook-authenticator
certificatesSecretName: gardener.cloud:authentication:oidc-webhook-authenticator

oidc:
  - name: "foo"
    values:
      # IssuerURL is the URL the provider signs ID Tokens as.
      # This will be the "iss" field of all tokens produced by the provider
      # and is used for configuration discovery. The URL is usually the
      # provider's URL without a path, for example "https://foo.com" or
      # "https://example.com". The provider must implement configuration
      # discovery. See: https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfig
      issuerURL: "https://foo.bar" # required
      # ClientID is the audience for which the JWT must be issued
      # for, the "aud" field. The plugin supports the "authorized
      # party" OpenID Connect claim, which allows specialized providers
      # to issue tokens to a client for a different client. See: https://openid.net/specs/openid-connect-core-1_0.html#IDToken
      clientID: "some-client-id" # required
      # UsernameClaim is the JWT field to use as the user's username.
      # usernameClaim: ""
      # UsernamePrefix, if specified, causes claims mapping
      # to username to be prefix with the provided value. A value "oidc:"
      # would result in usernames like "oidc:john". If not provided,
      # the prefix defaults to "( .metadata.name )/". The value "-""
      # can be used to disable all prefixing.
      # usernamePrefix: "-"
      # GroupsClaim, if specified, causes the OIDCAuthenticator
      # to try to populate the user's groups with an ID Token field. If
      # the GroupsClaim field is present in an ID Token the value must be
      # a string or list of strings.
      # groupsClaim: ""
      # GroupsPrefix, if specified, causes claims mapping to
      # group names to be prefixed with the value. A value "oidc:" would
      # result in groups like "oidc:engineering" and "oidc:marketing".
      # If not provided, the prefix defaults to "( .metadata.name )/".
      # The value "-"" can be used to disable all prefixing."
      # groupsPrefix: ""
      # `caBundle` is a PEM encoded CA bundle which will be
      # used to validate the webhook''s server certificate. If unspecified,
      # system trust roots on the apiserver are used.
      # caBundle: ""
      # JWKS if specified, provides an option to specify JWKS
      # keys offline.
      # jwks: {}
        # `keys` is a base64 encoded JSON webkey Set. If specified,
        # the OIDCAuthenticator skips the request to the issuer''s jwks_uri
        # endpoint to retrieve the keys.'
        # keys: ""
      # RequiredClaims, if specified, causes the OIDCAuthenticator
      # to verify that all the required claims key value pairs are present
      # in the ID Token.
      # requiredClaims: {}
        # baz: bar
      # SupportedSigningAlgs sets the accepted set of JOSE signing
      # algorithms that can be used by the provider to sign tokens. https://tools.ietf.org/html/rfc7518#section-3.1
      # This value defaults to RS256, the value recommended by the OpenID
      # Connect spec: https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation
      # supportedSigningAlgs:
